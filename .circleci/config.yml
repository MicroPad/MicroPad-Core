# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  test:
    docker:
      # specify the version you desire here
      - image: circleci/rust:latest-node
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ .Branch }}-{{ checksum "app/yarn.lock" }}
            - yarn-packages-{{ .Branch }}
            - yarn-packages-master
            - yarn-packages-

      - run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      - run: cd app && yarn

      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ .Branch }}-{{ checksum "app/yarn.lock" }}
          paths:
            - app/node_modules/
        
      # run tests!
      - run: cd app && yarn typecheck
      - run: cd app && yarn test

  build:
    docker:
      - image: circleci/rust:latest-node
    working_directory: ~/repo
    steps:
      - checkout

      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ .Branch }}-{{ checksum "app/yarn.lock" }}
            - yarn-packages-{{ .Branch }}
            - yarn-packages-master
            - yarn-packages-

      - run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      - run: cd app && yarn

      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ .Branch }}-{{ checksum "app/yarn.lock" }}
          paths:
            - app/node_modules/

      - run: cd app && yarn build && tar cfJ micropad.tar.xz build/*
      - store_artifacts:
          path: app/micropad.tar.xz
          destination: micropad.tar.xz
      - persist_to_workspace:
          root: app/
          paths:
            - build/*
            - micropad.tar.xz

  deploy:
    docker:
      - image: circleci/rust:latest-node

    working_directory: ~/repo

    steps:
      - attach_workspace:
          at: ~/repo/app
      - run: sudo apt install rsync

      - run: rsync -aue "ssh -p 1276 -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" app/build/* $SSH_PATH

  publish-github-release:
    docker:
      - image: cibuilds/github:0.12

    steps:
      - attach_workspace:
          at: ~/repo/app
      - run:
          name: "Publish Release on GitHub"
          command: |
            VERSION=${CIRCLE_TAG}
            ghr -t ${GH_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} ~/repo/app/micropad.tar.xz

workflows:
  version: 2
  test-and-deploy:
    jobs:
      - test:
          filters:
            tags:
              only: /^v.*/
      - build:
          filters:
            tags:
              only: /^v.*/
      - publish-github-release:
          requires:
            - test
            - build
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - deploy:
          requires:
            - test
            - build
          filters:
            branches:
              only: master
